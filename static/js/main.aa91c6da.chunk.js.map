{"version":3,"sources":["Container/Header/styled.js","Container/Header/index.js","Container/Form/styled.js","Container/Form/Button/styled.js","Container/Form/Button/index.js","Container/Form/Input/styled.js","Container/Form/Input/index.js","Container/Paragraph/styled.js","Container/Paragraph/index.js","Container/Form/Select/styled.js","Container/currencies/index.js","Container/Form/Select/index.js","Container/Form/Result/styled.js","Container/Form/Result/index.js","Container/Form/Clock/styled.js","Container/Form/Clock/index.js","Container/Form/Clock/useCurrentDate.js","Container/Form/index.js","Container/Footer/styled.js","Container/Footer/index.js","Container/styled.js","Container/index.js","Theme.js","App.js","reportWebVitals.js","index.js"],"names":["Title","styled","h1","theme","colors","primaryColor","breakpoints","xsmall","Header","title","FormBody","form","secondaryColor","Fieldset","fieldset","FormButton","button","shadow","primaryColorHover","primaryColorActive","Button","buttonName","InputBody","input","Input","amount","setAmount","type","min","step","placeholder","required","value","onChange","target","ParagraphText","p","Paragraph","text","Wrapped","select","currencies","id","rate","name","Select","currency","setCurrency","map","div","bolder","css","Result","result","undefined","sourceAmount","toFixed","targetAmount","mall","Clock","date","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleDateString","weekday","day","month","hour","minute","second","formatDate","Form","setResult","inputRef","useRef","onSubmit","event","preventDefault","find","calculateResult","ref","onClick","current","focus","FooterElement","footer","Footer","Main","main","small","Container","children","medium","large","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa91c6da.chunk.js","sourcesContent":["\nimport styled from \"styled-components\";\n\nexport const Title = styled.h1`\n    background-color: ${({ theme }) => theme.colors.primaryColor};\n    color: white;\n    padding: 30px;\n    margin: auto;\n    text-transform: uppercase;\n    letter-spacing: 5px;\n    word-spacing: 15px;\n    text-align: center;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n      font-size: 1.7em ;\n    }\n`;\n","import { Title } from \"./styled.js\";\n\nconst Header = ({ title }) => (\n    <Title>{title}</Title>\n);\nexport default Header;","import styled from \"styled-components\";\n\nexport const FormBody = styled.form`\n    background-color: ${({ theme }) => theme.colors.secondaryColor};\n    justify-content: center;\n`;\n\nexport const Fieldset = styled.fieldset`\n    display: flex;\n    flex-direction: column;\n    border: none ;\n    background-color: rgb(198, 233, 247);\n    min-width: 280px;\n`;\n","import styled from \"styled-components\";\n\nexport const FormButton = styled.button`\n    background-color: ${({ theme }) => theme.colors.primaryColor};\n    border: none;\n    margin: 50px 30px 0px;\n    padding: 20px;\n    color: white;\n    box-shadow: ${({ theme }) => theme.shadow};\n\n\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.primaryColorHover};\n        transition: 1s;\n    }\n\n    &:active {\n        background-color: ${({ theme }) => theme.colors.primaryColorActive};\n        transition: 1s;\n    }\n`;","import { FormButton } from \"./styled.js\";\n\nconst Button = ({ buttonName }) => (\n    <FormButton>{buttonName}</FormButton>\n);\n\nexport default Button;","import styled from \"styled-components\";\n\nexport const InputBody = styled.input`\n    padding: 20px;\n    margin: 0 30px;\n    border: 1px solid #ddd;\n    color: hsl(0, 0%, 60%);\n    box-shadow: ${({ theme }) => theme.shadow};\n`;\n","import { InputBody } from \"./styled.js\";\n\nconst Input = ({ amount, setAmount }) => {\n    return (\n        <InputBody\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            placeholder=\"0,00\"\n            required\n            value={amount}\n            onChange={({ target }) => setAmount(target.value)}\n        />\n    )\n};\n\nexport default Input;","import styled from \"styled-components\";\n\nexport const ParagraphText = styled.p`\n    color: ${({ theme }) => theme.colors.primaryColor};\n    font-weight: bold;\n    padding: 10px;\n    text-align: center;\n`;\n","import { ParagraphText } from \"./styled.js\";\n\nconst Paragraph = ({ text }) => (\n    <ParagraphText>\n        {text}\n    </ParagraphText>\n);\n\nexport default Paragraph;","import styled from \"styled-components\";\n\nexport const Wrapped = styled.select`\n    margin: 0 30px;\n    border: 1px solid #ddd;\n    padding: 20px;\n    box-shadow: ${({ theme }) => theme.shadow};\n    height: 60px;\n`;\n","const currencies = [\n    { id: \"CHF\", rate: 4.1360, name: \"CHF - Frank szwajcarski\" },\n    { id: \"EUR\", rate: 4.5027, name: \"EUR - Euro\" },\n    { id: \"GBP\", rate: 5.2369, name: \"GBP - Funt szterling\" },\n    { id: \"JPY\", rate: 3.3908, name: \"JPY - Jen japoÅ„ski\" },\n    { id: \"CZK\", rate: 0.1769, name: \"CZK - Korona czeska\" },\n    { id: \"ISK\", rate: 3.0589, name: \"ISK - Korona islandzka\" },\n    { id: \"RUB\", rate: 0.0514, name: \"RUB - Rubel rosyjski\" },\n];\n\nexport default currencies;","import { Wrapped } from \"./styled.js\";\nimport currencies from \"../../currencies\";\n\n\nconst Select = ({ currency, setCurrency }) => (\n    <Wrapped\n        value={currency}\n        onChange={({ target }) => setCurrency(target.value)}\n    >\n        {currencies.map(currency => (\n            <option\n                key={currency.id}\n                value={currency.id}\n                required\n            >\n                {currency.name}\n            </option>\n        ))}\n    </Wrapped>\n)\n\nexport default Select;","import styled, {css} from \"styled-components\"\n\nexport const Wrapped = styled.div`\n    text-align: center;\n    margin: 20px;\n    color:  ${({ theme }) => theme.colors.primaryColor};\n`;\n\nexport const Paragraph = styled.p`\n    font-size: larger;\n\n    ${({ bolder }) => bolder && css`\n        font-weight: 900;\n`}\n`;","import { Wrapped, Paragraph } from \"./styled.js\";\n\nconst Result = ({ result }) => (\n    <Wrapped>\n        {result !== undefined && (\n            <>\n                <Paragraph>Kwota wyliczona na podstawie kursu NBP </Paragraph>\n                <Paragraph> z dnia 14-06-2021:</Paragraph>\n                <Paragraph bolder>\n                        {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;={\" \"}\n                        {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\n                </Paragraph>\n            </>\n        )}\n    </Wrapped>\n);\n\nexport default Result;","import styled from \"styled-components\";\n\nexport const Paragraph = styled.p`\n    text-align: right;\n    font-family: \"Source Code Pro\", monospace;\n    font-size: smaller;\n    color: hsla(221, 51%, 25%, 0.749);\n    margin-right: 10px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.mall}px) {\n      text-align: center;\n    }\n`;\n\n","import { Paragraph } from \"./styled.js\";\nimport {useCurrentDate} from \"./useCurrentDate\";\n\n\nexport const Clock = () => {\n    const date = useCurrentDate();\n\n    const formatDate = (date) => date.toLocaleDateString(undefined,\n        {\n            weekday: \"long\",\n            day: \"numeric\",\n            month: \"long\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n            second: \"numeric\",\n        }\n    );\n\n    return (\n        <Paragraph>\n            Dzisiaj jest {formatDate(date)}\n        </Paragraph>\n    );\n};","import { useState, useEffect } from \"react\";\n\nexport const useCurrentDate = () => {\n    const [date, setDate] = useState(new Date());\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setDate(new Date())\n        }, 1000);\n\n        return () =>\n            clearInterval(intervalId);\n    }, []);\n\n    return date;\n};","import \"./styled.js\";\nimport { useState, useRef } from \"react\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\nimport Paragraph from \"../Paragraph\";\nimport Select from \"./Select\";\nimport Result from \"./Result\";\nimport currencies from \"../currencies\";\nimport { Clock } from \"./Clock\";\nimport { FormBody, Fieldset } from \"./styled\"\n\nconst Form = () => {\n    const [amount, setAmount] = useState(\"\");\n    const [currency, setCurrency] = useState(currencies[0].id);\n    const [result, setResult] = useState();\n    const calculateResult = (amount, currency) => {\n\n        const rate = currencies\n            .find(({ id }) => id === currency)\n            .rate;\n\n        setResult({\n            sourceAmount: +amount,\n            targetAmount: amount / rate,\n            currency,\n        });\n    }\n\n    const inputRef = useRef(null);\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        calculateResult(amount, currency);\n    };\n\n    return (\n        <FormBody\n            onSubmit={onSubmit}\n        >\n            <Fieldset>\n                <Clock />\n                <Paragraph\n                    text=\"Kwota w PLN\"\n                />\n                <Input\n                    ref={inputRef}\n                    amount={amount}\n                    setAmount={setAmount}\n                />\n                <Paragraph text=\"Przelicz na\" />\n                <Select\n                    currency={currency}\n                    setCurrency={setCurrency}\n                />\n                <Button\n                    onClick={() => inputRef.current.focus()}\n                    buttonName=\"Policz kurs\"\n                />\n                <Result\n                    result={result}\n                />\n            </Fieldset>\n        </FormBody>\n    );\n};\n\nexport default Form;","import styled from \"styled-components\";\n\nexport const FooterElement = styled.footer`\n    text-align: center;\n    font-size: smaller;\n    font-weight: 300;\n`;\n","import { FooterElement } from \"./styled.js\";\nimport Paragraph from \"../Paragraph\";\n\nconst Footer = ({ text }) => (\n    <FooterElement>\n        <Paragraph text={text} />\n    </FooterElement>\n);\n\nexport default Footer;","import styled from \"styled-components\";\n\nexport const Main = styled.main`\n    max-width: 650px;\n    margin: 15px auto;\n    box-shadow: ${({ theme }) => theme.shadow};\n    font-family: \"Lato\", sans-serif;\n    min-width: 280px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n      margin: 15px;\n    }\n`;\n\n\n\n","import { Main } from \"./styled.js\";\n\nconst Container = ({ children }) => (\n    <Main>\n        {children}\n    </Main>\n);\n\nexport default Container;","export const theme = {\n    colors: {\n        primaryColor:\"hsl(221, 51%, 25%)\",\n        primaryColorHover:\"hsl(221, 51%, 35%)\",\n        primaryColorActive:\"hsl(221, 51%, 45%)\",\n        secondaryColor: \"hsl(197, 75%, 87%)\",\n    },\n    breakpoints: {\n        xsmall: 576,\n        small: 768,\n        medium: 992,\n        large: 1200,\n    },\n    shadow: \"5px 5px 7px hsl(0, 0%, 50%)\",\n};\n","import Header from \"./Container/Header\";\nimport Form from \"./Container/Form\";\nimport Footer from \"./Container/Footer\";\nimport Container from \"./Container\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./Theme\"\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n    <>\n      <Container>\n        <Header\n          title=\"Kalkulator walut\"\n        />\n        <Form />\n        <Footer\n          text=\"Coded by Trishya Â© 2021\"\n        />\n      </Container>\n    </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}