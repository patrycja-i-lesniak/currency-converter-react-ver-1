{"version":3,"sources":["GlobalStyle.js","Container/Header/styled.js","Container/Header/index.js","Container/Form/loading.gif","Container/Form/nointernet.gif","Container/Form/styled.js","Container/Form/Button/styled.js","Container/Form/Button/index.js","Container/Paragraph/styled.js","Container/Paragraph/index.js","Container/Form/Result/styled.js","Container/Form/Result/index.js","Container/Form/Clock/styled.js","Container/Form/Clock/index.js","Container/Form/Clock/useCurrentDate.js","Container/Form/index.js","Container/useApiExchangesRates.js","Container/Footer/index.js","Container/index.js","App.js","reportWebVitals.js","index.js","Theme.js"],"names":["GlobalStyle","createGlobalStyle","theme","colors","white","breakpoints","small","Title","styled","h1","selectiveYellow","woodsmoke","xsmall","Header","title","FormBody","form","Fieldset","fieldset","Input","input","alto","shadow","select","css","Loading","img","attrs","src","LoadingGif","NoInternet","NoInternetGif","FormButton","button","robinsEggBlue","Button","buttonName","ParagraphText","p","Paragraph","text","Wrapped","div","result","highlight","crimson","Result","date","undefined","sourceAmount","toFixed","targetAmount","currency","Clock","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleDateString","weekday","day","month","hour","minute","second","formatDate","Form","amount","setAmount","setCurrency","setResult","inputRef","useRef","ratesData","status","setRatesData","setTimeout","a","axios","get","response","data","rates","useApiExchangesRates","onSubmit","event","preventDefault","amountTrimmed","trim","rate","console","log","calculateResult","current","focus","ref","type","min","step","placeholder","required","value","onChange","target","as","Object","keys","map","Footer","footer","Container","main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","medium","large","document","getElementById"],"mappings":"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","file":"static/js/main.f1733026.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n      box-sizing: border-box;\n    }\n\n    *,\n    ::after,\n    ::before {\n      box-sizing: inherit;\n    }\n\n    .root {\n      font-size: 16px;\n    }\n\n    body {\n      background-color: ${({ theme }) => theme.colors.white};\n\n      @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n       padding: 10px;\n    }\n    }\n`;","\nimport styled from \"styled-components\";\n\nexport const Title = styled.h1`\n    background-color: ${({ theme }) => theme.colors.selectiveYellow};\n    color: ${({ theme }) => theme.colors.woodsmoke};\n    padding: 30px;\n    margin: auto;\n    text-transform: uppercase;\n    letter-spacing: 5px;\n    word-spacing: 15px;\n    text-align: center;\n    font-family: 'Secular One', sans-serif;\n    font-size: 40px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n      font-size: 30px;\n    }\n`;\n","import { Title } from \"./styled.js\";\n\nconst Header = ({ title }) => (\n    <Title>{title}</Title>\n);\nexport default Header;","export default __webpack_public_path__ + \"static/media/loading.b90130d5.gif\";","export default __webpack_public_path__ + \"static/media/nointernet.548de0ba.gif\";","import styled, { css } from \"styled-components\";\nimport LoadingGif from \"./loading.gif\";\nimport NoInternetGif from \"./nointernet.gif\";\n\nexport const FormBody = styled.form`\n    background-color: ${({ theme }) => theme.colors.woodsmoke};\n    justify-content: center;\n`;\n\nexport const Fieldset = styled.fieldset`\n    min-height: 550px;\n    display: flex;\n    flex-direction: column;\n    border: none ;\n    min-width: 280px;\n`;\n\nexport const Input = styled.input`\n    padding: 10px;\n    margin: 0 30px;\n    border: 1px solid ${({ theme }) => theme.colors.alto};\n    box-shadow: ${({ theme }) => theme.shadow};\n    color: hsl(0, 0%, 60%);\n    border-radius: 5px;\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        }\n    ${({ select }) => select && css`\n        height: 40px;\n    `}\n`;\n\nexport const Loading = styled.img.attrs({\n    src: LoadingGif,\n})`\n        align-self: center;\n        width: 300px;\n        margin-bottom: 60px;\n`;\n\nexport const NoInternet = styled.img.attrs({\n    src: NoInternetGif,\n})`\n        align-self: center;\n        width: 300px;\n        margin-bottom: 60px;\n`;","import styled from \"styled-components\";\n\nexport const FormButton = styled.button`\n    background-color: ${({ theme }) => theme.colors.robinsEggBlue};\n    border: none;\n    margin: 50px 30px 0px;\n    padding: 15px;\n    border-radius: 5px;\n    color: ${({ theme }) => theme.colors.woodsmoke};\n    font-weight: 600;\n    box-shadow: ${({ theme }) => theme.shadow};\n    transition: filter 0.5s;\n    text-transform: uppercase;\n    word-spacing: 5px;\n    letter-spacing: 3px;\n\n    &:hover {\n        filter: brightness(110%);\n    }\n\n    &:active {\n        filter: brightness(130%);\n    }\n`;","import { FormButton } from \"./styled.js\";\n\nconst Button = ({ buttonName }) => (\n    <FormButton>{buttonName}</FormButton>\n);\n\nexport default Button;","import styled from \"styled-components\";\n\nexport const ParagraphText = styled.p`\n    color: ${({ theme }) => theme.colors.robinsEggBlue};\n    font-weight: 700;\n    padding: 10px;\n    text-align: center;\n`;\n","import { ParagraphText } from \"./styled.js\";\n\nconst Paragraph = ({ text }) => (\n    <ParagraphText>\n        {text}\n    </ParagraphText>\n);\n\nexport default Paragraph;","import styled, { css } from \"styled-components\";\n\nexport const Wrapped = styled.div`\n    text-align: center;\n    margin: 20px;\n`;\n\nexport const Paragraph = styled.p`\n    font-size: 16px;\n    padding-top: 10px;\n\n    ${({ result }) => result && css`\n        font-weight: 200;\n        font-size: 14px;\n        color:  ${({ theme }) => theme.colors.selectiveYellow};\n    `}\n\n    ${({ highlight }) => highlight && css`\n        font-weight: 600;\n        font-size: 20px;\n        color:  ${({ theme }) => theme.colors.crimson};\n    `}\n`;","import { Wrapped, Paragraph } from \"./styled.js\";\n\nconst Result = ({ result, date }) => (\n    <Wrapped>\n        {result !== undefined && (\n            <>\n                <Paragraph highlight>\n                    {result.sourceAmount.toFixed(2)}&nbsp;&nbsp;PLN&nbsp;&nbsp;={\"  \"}\n                    {result.targetAmount.toFixed(2)}&nbsp;&nbsp;{result.currency}\n                </Paragraph>\n                <Paragraph result>Kurs aktualny na dzień: {date} </Paragraph>\n            </>\n        )}\n    </Wrapped>\n);\n\nexport default Result;","import styled from \"styled-components\";\n\nexport const Paragraph = styled.p`\n    text-align: right;\n    font-family: \"Source Code Pro\", monospace;\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.crimson};\n    margin-right: 10px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n      text-align: center;\n    }\n`;","import { Paragraph } from \"./styled.js\";\nimport { useCurrentDate } from \"./useCurrentDate\";\n\n\nexport const Clock = () => {\n    const date = useCurrentDate();\n\n    const formatDate = (date) => date.toLocaleDateString(undefined,\n        {\n            weekday: \"long\",\n            day: \"numeric\",\n            month: \"long\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n            second: \"numeric\",\n        }\n    );\n\n    return (\n        <Paragraph>\n            Dzisiaj jest {formatDate(date)}\n        </Paragraph>\n    );\n};","import { useState, useEffect } from \"react\";\n\nexport const useCurrentDate = () => {\n    const [date, setDate] = useState(new Date());\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setDate(new Date())\n        }, 1000);\n\n        return () =>\n            clearInterval(intervalId);\n    }, []);\n\n    return date;\n};","import \"./styled.js\";\nimport { useState, useRef } from \"react\";\nimport Button from \"./Button\";\nimport Paragraph from \"../Paragraph\";\nimport Result from \"./Result\";\nimport { Clock } from \"./Clock\";\nimport { useApiExchangesRates } from \"../useApiExchangesRates\";\nimport { FormBody, Fieldset, Input, Loading, NoInternet } from \"./styled\";\n\n\nconst Form = () => {\n    const [amount, setAmount] = useState();\n    const [currency, setCurrency] = useState(\"EUR\");\n    const [result, setResult] = useState();\n\n    const inputRef = useRef(null);\n    const deleteAmount = () => {\n        setAmount([]);\n    };\n\n    const ratesData = useApiExchangesRates();\n    const status = ratesData.status;\n    const rates = ratesData.rates;\n    const date = ratesData.date;\n\n    const calculateResult = () => {\n        const rate = rates[currency];\n        console.log(rate);\n        setResult({\n            sourceAmount: +amount,\n            targetAmount: amount * rate,\n            currency,\n        });\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const amountTrimmed = amount.trim();\n        if (!amountTrimmed) {\n            return;\n        }\n        deleteAmount(amountTrimmed);\n        calculateResult(amount, currency);\n        inputRef.current.focus();\n    };\n\n\n    return (\n        <FormBody onSubmit={onSubmit}>\n            <Fieldset>\n                {status === \"loading\"\n                    ? (\n                        <>\n                            <Loading />\n                            <Paragraph text=\"Ładuję kursy walut z Europejskiego Banku Centralnego\" />\n                        </>\n                    )\n                    : status === \"error\" ? (\n                        <>\n                            <NoInternet />\n                            <Paragraph text=\"Ups.. mamy problem. Sprawdź połączenie z internetem lub wróć za chwilę.\" />\n                        </>\n                    ) : (\n                        <>\n                            <Clock />\n                            <Paragraph\n                                text=\"Wpisz kwotę w PLN\"\n                            />\n                            <Input\n                                ref={inputRef}\n                                type=\"number\"\n                                min=\"0.01\"\n                                step=\"0.01\"\n                                placeholder=\"0,00\"\n                                required\n                                value={amount}\n                                onChange={({ target }) => setAmount(target.value)}\n                            />\n                            <Paragraph text=\"Przelicz na\" />\n                            <Input select\n                                as=\"select\"\n                                onChange={({ target }) => setCurrency(target.value)}\n                                required\n                                value={currency}\n                            >\n                                {Object.keys(rates).map((currency) => (\n                                    <option\n                                        key={currency}\n                                        value={currency}\n                                    >\n                                        {currency}\n                                    </option>\n                                ))}\n                            </Input>\n                            <Button\n                                buttonName=\"Policz kurs\"\n                            />\n                            <Result\n                                result={result}\n                                date={date}\n                            />\n                        </>\n                    )}\n            </Fieldset>\n        </FormBody>\n    );\n};\n\nexport default Form;","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\n\nexport const useApiExchangesRates = () => {\n    const [ratesData, setRatesData] = useState(\n        {\n            status: \"loading\",\n        }\n    );\n\n    const apiUrl = \"https://api.exchangerate.host/latest?base=PLN\";\n\n    useEffect(() => {\n        const getApiDate = async () => {\n            try {\n                const response = await axios.get(apiUrl);\n                const { date, rates } = response.data;\n\n                setRatesData(\n                    {\n                        date,\n                        rates,\n                        status: \"ready\",\n                    }\n                );\n\n            } catch (error) {\n                setRatesData(\n                    {\n                        status: \"error\"\n                    });\n            }\n        };\n\n        setTimeout(getApiDate, 3000);\n    }, []);\n\n    return ratesData;\n};","import styled from \"styled-components\";\n\nexport const Footer = styled.footer`\n    text-align: center;\n    font-size: smaller;\n    font-weight: 300;\n    color: ${({ theme }) => theme.colors.woodsmoke};\n    font-weight: 700;\n    padding: 15px;\n    text-align: center;\n    background-color: ${({ theme }) => theme.colors.selectiveYellow};\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.main`\n    max-width: 450px;\n    margin: 15px auto;\n    box-shadow: ${({ theme }) => theme.shadow};\n    font-family: \"Lato\", sans-serif;\n    min-width: 280px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n        margin: 0 auto;\n    }\n`;\n\n\n\n","import Header from \"./Container/Header\";\nimport Form from \"./Container/Form\";\nimport { Footer } from \"./Container/Footer\";\nimport { Container } from \"./Container\";\n\nfunction App() {\n  return (\n    <>\n      <Container>\n        <Header\n          title=\"Kalkulator walut\"\n        />\n        <Form />\n        <Footer>\n          © 2021 | Coded by Patrycja Leśniak\n        </Footer>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./Theme\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    colors: {\n        selectiveYellow: \"#FFBB00\",\n        woodsmoke: \"#1A191A\",\n        white: \"#FFFFFF\",\n        alto: \"#DCDCDA\",\n        robinsEggBlue: \"#00C5B5\",\n        crimson: \"#EC1336\",\n    },\n    breakpoints: {\n        xsmall: 576,\n        small: 768,\n        medium: 992,\n        large: 1200,\n    },\n    shadow: \"5px 5px 20px #303030\",\n};\n"],"sourceRoot":""}